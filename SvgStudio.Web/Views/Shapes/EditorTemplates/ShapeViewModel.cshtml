@model SvgStudio.Web.ViewModels.Shapes.ShapeViewModel

<fieldset>
    <legend>Licensing Information</legend>
    <div class="col-lg-5">
        <div class="form-group">
            <label for="@Html.NameFor(x => x.LicenseId)">Goverrning License</label>
            @Html.DropDownListFor(x => x.LicenseId, Model.LicenseOptions, new { @class = "form-control" })
        </div>
    </div>
    <div class="col-lg-7">
        <div class="form-group">
            <label for="@Html.NameFor(x => x.ContentUrl)">Artwork URL <small>(Where did you download the artwork from?)</small></label>
            @Html.TextBoxFor(x => x.ContentUrl, new { type = "url", @class = "form-control" })
        </div>
    </div>
    <div class="col-lg-5">
        <div class="form-group">
            <label for="@Html.NameFor(x => x.AttributionName)">Attribution Name <small>(Who do we need to give credit to?)</small></label>
            @Html.TextBoxFor(x => x.AttributionName, new { @class = "form-control" })
        </div>
    </div>
    <div class="col-lg-7">
        <div class="form-group">
            <label for="@Html.NameFor(x => x.AttributionUrl)">Attribution URL <small>(What is the URL for the person/company that we need to give credit to?)</small></label>
            @Html.TextBoxFor(x => x.AttributionUrl, new { type = "url", @class = "form-control" })
        </div>
    </div>
</fieldset>
<fieldset>
    <legend>Rendering Data</legend>
    <div class="col-lg-12">
        <label>
            <strong>Activate Shape</strong>
            <small>(Only activate a shape once it is ready to be downloaded by the mobile app.)</small>
        </label>
        <div class="checkbox">
            <label>
                @Html.CheckBoxFor(x => x.IsActive)
                Shape is Active
            </label>
        </div>
    </div>
    <div class="col-lg-4">
        <div class="form-group">
            <label for="@Html.NameFor(x => x.Name)">Shape Name <small>(Must be unique.)</small></label>
            @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
        </div>
    </div>
    <div class="col-lg-2">
        <div class="form-group">
            <label for="@Html.NameFor(x => x.Width)">Width <a id="autoCalcWidth" href="#"><i class="fa fa-magic"></i></a></label>
            @Html.TextBoxFor(x => x.Width, new { type = "tel", @class = "form-control" })
        </div>
    </div>
    <div class="col-lg-2">
        <div class="form-group">
            <label for="@Html.NameFor(x => x.Height)">Height <a id="autoCalcHeight" href="#"><i class="fa fa-magic"></i></a></label>
            @Html.TextBoxFor(x => x.Height, new { type = "tel", @class = "form-control" })
        </div>
    </div>
    <div class="col-lg-2">
        <div class="form-group">
            <label for="@Html.NameFor(x => x.NumberOfStrokesSupported)">Strokes Supported</label>
            @Html.DropDownListFor(x => x.NumberOfStrokesSupported, Model.NumberOfStrokeAndFillOptions, new { @class = "form-control" })
        </div>
    </div>
    <div class="col-lg-2">
        <div class="form-group">
            <label for="@Html.NameFor(x => x.NumberOfFillsSupported)">Fills Supported</label>
            @Html.DropDownListFor(x => x.NumberOfFillsSupported, Model.NumberOfStrokeAndFillOptions, new { @class = "form-control" })
        </div>
    </div>
    <div class="col-lg-12">
        <div class="form-group">
            <label for="@Html.NameFor(x => x.CompatibilityTags)">Compatiblity Tags <small>(Comma separated. Where does the shape go?)</small></label>
            @Html.TextBoxFor(x => x.CompatibilityTags, new { @class = "form-control" })
            <p>Options are: @Model.CompatibilityTagOptions</p>
        </div>
    </div>
    <div class="col-lg-12">
        @Html.EditorFor(x => x.BasicShape_MarkupFragment)
    </div>
    <div class="col-lg-6">
        <p>
            <strong>Preview (default):</strong>
        </p>
        <div id="DefaultPreviewContainer" class="svg-container">

        </div>
    </div>
    <div class="col-lg-6">
        <p>
            <strong>Preview (recolored):</strong>
            @Html.DropDownList("PreviewPaletteId", Model.PaletteOptions)
        </p>
        <div id="FilledPreviewContainer" class="svg-container">

        </div>
    </div>
</fieldset>
@Html.HiddenFor(x => x.Id)
@Html.HiddenFor(x => x.ShapeType)